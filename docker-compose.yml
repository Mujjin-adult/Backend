version: '3.8'

services:
  # PostgreSQL 데이터베이스
  postgres:
    image: postgres:16-alpine
    container_name: incheon-notice-db
    environment:
      POSTGRES_DB: incheon_notice
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: postgres
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U postgres"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Redis 캐시
  redis:
    image: redis:7-alpine
    container_name: incheon-notice-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  # Spring Boot 백엔드
  backend:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: incheon-notice-backend
    ports:
      - "8080:8080"
    environment:
      SPRING_PROFILES_ACTIVE: dev
      SPRING_DATASOURCE_URL: jdbc:postgresql://postgres:5432/incheon_notice
      SPRING_DATASOURCE_USERNAME: postgres
      SPRING_DATASOURCE_PASSWORD: postgres
      SPRING_DATA_REDIS_HOST: redis
      SPRING_DATA_REDIS_PORT: 6379
      JWT_SECRET: your-super-secret-key-change-this-in-production-minimum-256-bits-for-hs512-algorithm
      CRAWLER_API_URL: http://crawler:8000
    depends_on:
      postgres:
        condition: service_healthy
      redis:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  # FastAPI 크롤러
  crawler:
    build:
      context: ./crawler-service
      dockerfile: Dockerfile
    container_name: incheon-notice-crawler
    ports:
      - "8000:8000"
    environment:
      BACKEND_URL: http://backend:8080
    depends_on:
      - backend

  # pgAdmin (PostgreSQL 관리 도구)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: incheon-notice-pgadmin
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    ports:
      - "5050:80"
    volumes:
      - pgadmin_data:/var/lib/pgadmin
    depends_on:
      - postgres

  # Grafana (모니터링 대시보드)
  grafana:
    image: grafana/grafana:latest
    container_name: incheon-notice-grafana
    ports:
      - "3000:3000"
    environment:
      GF_SECURITY_ADMIN_USER: admin
      GF_SECURITY_ADMIN_PASSWORD: admin
    volumes:
      - grafana_data:/var/lib/grafana
    depends_on:
      - prometheus

  # Prometheus (메트릭 수집)
  prometheus:
    image: prom/prometheus:latest
    container_name: incheon-notice-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml
      - prometheus_data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
    depends_on:
      - backend

volumes:
  postgres_data:
  redis_data:
  pgadmin_data:
  grafana_data:
  prometheus_data:

networks:
  default:
    name: incheon-notice-network
